  This workflow will build, test, and analyze the Java project.
  name: Java CI/CD Pipeline

  on:
  push:
  branches:
    - main
  pull_request:
  branches:
    - main

  jobs:
  build_and_test:
  runs-on: ubuntu-latest

  steps:
    - uses: actions/checkout@v3
      with:
        fetch-depth: 0  # SonarQube needs the full history

    - name: Set up JDK 17
      uses: actions/setup-java@v3
      with:
        java-version: '17'
        distribution: 'temurin'
        cache: maven

    - name: Build and Run Unit/Integration Tests
      run: mvn clean install

    - name: Run BDD tests with Cucumber
      run: mvn test

    - name: Run API automation tests with REST Assured
      run: mvn test

    - name: Run UI automation tests with Selenium
      # Note: This requires a headless browser setup. We'll simulate for this example.
      run: echo "Selenium tests would run here."

    - name: SonarQube Analysis
      env:
        SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}
      run: mvn clean verify sonar:sonar -Dsonar.projectKey=task-management-system
